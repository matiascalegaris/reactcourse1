{"version":3,"sources":["components/card-list/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","option","id","name","email","CardList","options","map","element","SearchBox","placeHolder","action","type","placeholder","onChange","App","onSearchChange","event","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredOptions","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAGaA,EAAO,SAAAC,GAClB,OAAQ,sBAAKC,UAAU,iBAAf,UACN,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,OAAOC,GAAvC,4BACtB,6BAAKL,EAAMI,OAAOE,OAClB,4BAAIN,EAAMI,OAAOG,YCHRC,EAAW,SAAAR,GACtB,OAAQ,qBAAKC,UAAU,YAAf,SAEJD,EAAMS,QAAQC,KAAK,SAAAC,GAAO,OACxB,cAAC,EAAD,CAAuBP,OAAQO,GAApBA,EAAQN,UCLdO,G,MAAY,SAAC,GAAD,IAAIC,EAAJ,EAAIA,YAAaC,EAAjB,EAAiBA,OAAjB,OACvB,uBAAOb,UAAU,SAASc,KAAK,SAASC,YAAcH,EAAaI,SAAWH,MCmCjEI,E,kDAjCb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKC,SAAU,CAACC,YAAaF,EAAMG,OAAOC,SAb1C,EAAKC,MAAQ,CACXhB,QAAS,GACTa,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEZ,QAASqB,S,oBAO5C,WACE,MAAgCC,KAAKN,MAA7BhB,EAAR,EAAQA,QAASa,EAAjB,EAAiBA,YACXU,EAAkBvB,EAAQwB,QAAQ,SAAAtB,GAAO,OAC7CA,EAAQL,KAAK4B,cAAcC,SAASb,EAAYY,kBAGlD,OACE,sBAAKjC,UAAU,MAAf,UACE,+CACA,cAAC,EAAD,CAAWY,YAAa,kBAAmBC,OAAQiB,KAAKZ,iBACxD,cAAC,EAAD,CAAUV,QAASuB,W,GA7BRI,aCOJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b37d119c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './card.styles.css';\r\n\r\nexport const Card = props => {\r\n  return (<div className='card-container'>\r\n    <img alt=\"monster\" src={`https://robohash.org/${props.option.id}?set=set4&size=180x180`} />\r\n    <h1>{props.option.name}</h1>\r\n    <p>{props.option.email}</p>\r\n  </div>)\r\n}","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport { Card } from './card/card.component';\r\n\r\nexport const CardList = props => {\r\n  return (<div className='card-list'>\r\n    {\r\n      props.options.map( element => (\r\n        <Card key={element.id} option={element} />\r\n      ))\r\n    }\r\n    </div>)\r\n}","import React from \"react\";\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ( { placeHolder, action} ) => (\r\n  <input className=\"search\" type='search' placeholder={ placeHolder} onChange={ action }/>\r\n)\r\n\r\n","import './App.css';\nimport { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass  App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      options: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ options: users }));\n  }\n  \n  onSearchChange = (event) => {\n    this.setState( {searchField: event.target.value})\n  }\n\n  render() {\n    const { options, searchField} = this.state;\n    const filteredOptions = options.filter( element => \n      element.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1> Cat Rolodex </h1>\n        <SearchBox placeHolder={'search monsters'} action={this.onSearchChange}/>\n        <CardList options={filteredOptions}></CardList>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}